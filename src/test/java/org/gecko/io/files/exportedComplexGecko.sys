contract Element_0 {
    input Element_4: bool
    output Element_5: int
    state Element_6: double

    contract Element_43 := (((true) & (true)) & (true)) & (! (((true) & (true)) & (true))) ==> ((true) & (true)) & (true)
    contract Element_44 := (! (((true) & (true)) & (true))) & (! (((true) & (true)) & (true))) ==> TRUE
    contract Element_32 := ((true) & (true)) & (true) ==> ((true) & (true)) & (true)
    contract Element_36 := true ==> true

    Element_24 -> Element_26 :: Element_44
    Element_26 -> Element_26 :: Element_36
    Element_24 -> Element_25 :: Element_43
    Element_24 -> Element_25 :: Element_43
    Element_25 -> Element_24 :: Element_32
}

contract Element_3 {
    input Element_50: int
    output Element_11: int

    contract Element_53 := true ==> true
    contract Element_55 := true ==> true
    contract Element_57 := true ==> true

    Element_37 -> Element_38 :: Element_53
    Element_38 -> Element_39 :: Element_55
    Element_39 -> Element_37 :: Element_57
}

reactor Element_0 {
    input Element_4: bool
    output Element_5: int
    state Element_6: double

    state Element_1: Element_1
    state Element_2: Element_2
    state Element_3: Element_3

    contract Element_0

    self.Element_4 -> Element_1.Element_7
    Element_1.Element_8 -> Element_2.Element_9
    Element_2.Element_10 -> self.Element_5
    Element_3.Element_11 -> self.Element_6

}

reactor Element_1 {
    input Element_7: bool
    output Element_8: int

}

reactor Element_2 {
    input Element_9: int
    output Element_10: int

    state Element_49: Element_49

}

reactor Element_49 {
}

reactor Element_3 {
    input Element_50: int
    output Element_11: int

    state Element_17: Element_17
    state Element_16: Element_16

    contract Element_3

    Element_16.Element_19 -> Element_17.Element_20
    Element_17.Element_21 -> Element_16.Element_18

}

reactor Element_17 {
    input Element_20: int
    output Element_21: int

}

reactor Element_16 {
    input Element_18: int
    output Element_19: int

}
